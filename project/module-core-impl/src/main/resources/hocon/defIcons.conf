

textures {
  // string -> pure MATERIAL deserialize
  texture: cyan stained glass panel

  // object exampels
  // 1.custom head (variable, custom texture, base64 all supported)
  texture {
    head: "{{player_name}}"
  }
  // 2.source insert
  texture {
    source: ORAXEN,
    value: 123
  }
  // 3. json/seralized/base64
  texture {
    seralized: "{{......}}"
  }
}

standardItem {

  // display part
  // 不具备主动更新能力, 初次渲染处理所有变量并缓存

  // override key name for layout-use
  key: >

  texture: cyan stained glass panel
  name: "{{player name}}"

  flags: [
    HIDE_ATTRIBUTES
    HIDE_ENCHANTMENTS
  ]
  nbt {
    key: value
    key: "value with variable {{player name}}"
  }
  enchantments {
    SHARP: 2
  }

  // action handler
  // see also defActions.conf
  action {}

}

animatedItem {
  // update -> current item replace all variables
  update = 20
  // frames -> current item modify with new specificed name/lore
  frames = 20
  // frames - specific type

  // texture, name, lore, slot
  frames = [20, 20, 20, -1]
  frames {
    default = 20
    slots {period = 20, type = loop}
    textures {period = 20, type = random}
  }

  // define frames of material
  texture = [
    cyan stained glass panel
    {head: "{{player_name}}"},
    "head:{{player name}}" // supported key,value in one string splited by :
  ]

  // define frames of lore
  presetLore = [
    String 1
    String 2
    String 3
  ]
  lore = [
    ${animatedItem.presetLore} [LINE 4 is dynamic],
    ${animatedItem.presetLore} [Quote preset and added another line, line2]
  ]

}

iconWithSubIcons {

  // concept_1
  sub {
    relocate: 20

    forVIP {
      condition: perm vip
      priority: animation
      inherit: true
    }

    forMVP {
      condition: perm mvp
    }
  }

  // relocating subIcon task

  relocate: 20
  // concept_2
  sub = [
    {
      // override
      relocate: 40
      condition: condition
      material: cyan stained glass panel
    }
    {
      priority: []
      condition: condition2
    }
  ]
}